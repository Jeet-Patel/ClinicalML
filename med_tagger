import re
import sys
import json
import threading

import spacy
import en_core_med7_lg
import pandas as pd

from los.config import *

# Do this for MIMIC
def preprocessing(txt):

    # Remove all the encrypted tokens
    # Encrypted tokens are represeted as [**xyz**] where xyz can be date/NAME/HOSPTIAL NAME
    txt = re.sub(r'\(\[\*\*.*?\*\*\]\)',"", txt)
    txt = re.sub(r'\[\*\*.*?\*\*\]',"", txt)
    return txt

def extractEnt(txt, med7, results, index):
    preprocessed_txt = preprocessing(txt)
    doc = med7(preprocessed_txt)
    results[index] = [(ent.text, ent.label_) for ent in doc.ents]


def get_input(slurm_task_id):
    df = pd.read_csv(input_data)
    start_idx = slurm_task_id * batch_size
    end_idx = start_idx + batch_size

    return df[start_idx : end_idx].reset_index(drop=True)

if __name__ == "__main__":

    slurm_task_id = int(sys.argv[2])
    med7 = en_core_med7_lg.load()

    input = get_input(slurm_task_id)

    results = [None] * len(input)
    thread_list = []

    for idx, row in input.iterrows():
        txt = row[text_col]
        thread = threading.Thread(target=extractEnt, args=(txt, med7, results, idx))
        thread_list.append(thread)
        thread.start()

    for thread in thread_list:
        thread.join()

    input[output_col] = results
    # Ensure output_col exists before writing to CSV
    if output_col not in input.columns:
        raise ValueError(f"Column '{output_col}' was not added to the DataFrame.")

    output_file = output_file.format(sid=str(slurm_task_id))
    input.to_csv(output_file, mode='a', index=False)